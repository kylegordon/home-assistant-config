---
binary_sensor:
  - platform: template
    sensors:
      ensuite_window:
        friendly_name: Ensuite Window
        device_class: window
        icon_template: >-
          {% if is_state('binary_sensor.ensuite_window','on') %}
            mdi:window-open
          {% else %}
            mdi:window-closed
          {% endif %}
        value_template: "{{ is_state('binary_sensor.ensuite_window_opening_contact','on') or is_state('binary_sensor.ensuite_window_vibration','on') }}"

automation:
  - alias: Ensuite light toggle
    # Can be improved, examples at https://github.com/TheFes/HA-configuration/blob/main/include/automation/01_first_floor/floris/shelly_floris.yaml
    trigger:
      - platform: event
        event_type: esphome.button_pressed
        event_data:
          device_name: ensuite_switch
          click_type: single
    action:
      - service: switch.turn_on
        entity_id:
          - switch.ensuite_switch_relay
      - service: light.toggle
        data_template:
          entity_id: >
            {% if states('sensor.time_of_day') == "Morning" %}
            light.ensuite_facilities
            {% elif states('sensor.time_of_day') == "Night" %}
            light.ensuite_facilities
            {% else %}
            light.ensuite
            {% endif %}
      - service: logbook.log
        data_template:
          name: EVENT
          message: "Toggling ensuite light"

  - alias: Ensuite motion
    trigger:
      - platform: state
        entity_id: binary_sensor.ensuite_motion
        to: 'on'
        from: 'off'
    action:
      - service: light.turn_on
        data_template:
          entity_id: >
            {% if states('sensor.time_of_day') == "Morning" %}
            light.ensuite_facilities
            {% elif states('sensor.time_of_day') == "Night" %}
            light.ensuite_facilities
            {% else %}
            light.ensuite
            {% endif %}
          transition: >
            {% if states('sensor.time_of_day') == "Morning" %}
            10
            {% elif states('sensor.time_of_day') == "Day" %}
            2
            {% elif states('sensor.time_of_day') == "Night" %}
            30
            {% endif %}

  - alias: Ensuite shower activity
    trigger:
      - platform: numeric_state
        entity_id: sensor.shower_pump_power_plug_power
        above: 100
    condition:
      - condition: numeric_state
        entity_id: sensor.average_external_light_level
        above: 500
    action:
      - service: logbook.log
        data_template:
          name: EVENT
          message: "Shower is on"
          entity_id: sensor.shower_pump_power_plug_power
      - service: light.turn_on
        data_template:
          entity_id: >
            light.ensuite
          brightness_pct: >
            100
          transition: >
            {% if states('sensor.time_of_day') == "Morning" %}
            10
            {% elif states('sensor.time_of_day') == "Day" %}
            2
            {% elif states('sensor.time_of_day') == "Night" %}
            5
            {% endif %}
          color_temp: >
            200
      # https://developers.home-assistant.io/docs/core/entity/climate/
      # - service: climate.set_preset_mode
      #   data_template:
      #     entity_id: climate.hot_water
      #     preset_mode: 'boost'
      - service: notify.alexa_media
        data_template:
          target:
            - media_player.bedroom
          data:
            type: announce
            # method: all
          message: Hello! Enjoy your shower! The hot tank is currently {{ states('sensor.hot_tank_temperature') }} degrees.

  - alias: Ensuite shower off
    description: Return the heating boost to eco mode after the shower is finished
    trigger:
      - platform: numeric_state
        entity_id: sensor.shower_pump_power_plug_power
        below: 10
        for:
          minutes: 10
    action:
      - service: logbook.log
        data_template:
          name: EVENT
          message: "Shower is off"
          entity_id: sensor.shower_pump_power_plug_power
      # https://developers.home-assistant.io/docs/core/entity/climate/
      # - service: climate.set_preset_mode
      #   data_template:
      #     entity_id: climate.hot_water
      #     preset_mode: 'eco'

  - alias: Ensuite motion - night timeout
    trigger:
      - platform: state
        entity_id: binary_sensor.ensuite_motion
        to: 'off'
        for:
          minutes: 2
    condition:
      - condition: state
        entity_id: sensor.time_of_day
        state: "Night"
      - condition: numeric_state
        entity_id: sensor.shower_pump_power_plug_power
        below: 10
    action:
      service: light.turn_off
      entity_id: light.ensuite

  - alias: Ensuite motion - regular timeout
    trigger:
      - platform: state
        entity_id: binary_sensor.ensuite_motion
        to: 'off'
        for:
          minutes: 10
    condition:
      - condition: template
        value_template: "{{ not is_state('sensor.time_of_day', 'Night') }}"
    action:
      service: light.turn_off
      entity_id: light.ensuite
