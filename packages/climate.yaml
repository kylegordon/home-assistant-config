---
# Inspired by https://github.com/downthedeck/hassio-config/blob/master/packages/klimaat.yaml
# Not all modes are supported, as above uses Toon integration
# https://www.home-assistant.io/integrations/generic_thermostat/
# Generic thermostat currently only supports 'heat', 'cool' and 'off'

group:
  call_for_heat:
    # Add zones here. Essentially a glorified OR condition
    name: Call For Heat - Group
    entities:
      - input_boolean.call_for_rad_heat
      - input_boolean.call_for_guest_heat

input_boolean:
  # Inputs from external thermostats, such as household generic or a single room
  call_for_rad_heat:
    name: Call for heat - General
    icon: mdi:radiator
  call_for_guest_heat:
    name: Call for heat - Guest Room
    icon: mdi:radiator

sensor:
  - platform: season
    type: meteorological

binary_sensor:
  - platform: workday
    name: Workday
    country: GB
  - platform: workday
    name: Workday tomorrow
    country: GB
    days_offset: 1

automation:

  - alias: "Stop climate overrun"
    # If system is off whilst heating is on, the climate event is not triggered.
    # Could be wrapped into Call for heat - no demand
    description: "Ensure system turns off if HA is powered down whilst valves are open"
    trigger:
      - platform: numeric_state
        value_template: "{{ states.climate.house.attributes.current_temperature > states.climate.house.attributes.temperature + 0.5 }}"
    action:
      - service: homeassistant.turn_off
        entity_id: switch.boiler_valve_controls_relay_2

  - alias: "Call for heat - demand"
    description: Turn on boiler relay if there's a call for heat
    trigger:
      - platform: state
        entity_id: group.call_for_heat
        to: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.boiler_valve_controls_relay_2

  - alias: "Call for heat - no demand"
    description: Turn off boiler relay if demand for heat ceases
    trigger:
      - platform: state
        entity_id: group.call_for_heat
        to: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.boiler_valve_controls_relay_2

  - alias: "Climate - Away"
    trigger:
      - platform: state
        entity_id: group.people
        to: "not_home"
        for:
          minutes: 15
    action:
      - service: climate.set_preset_mode
        data:
          entity_id: climate.house
          preset_mode: "away"
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "away"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Setting heating and hot water thermostat to away mode

  - alias: "Climate - Comfort"
    trigger:
      - platform: time
        at: "19:00:00"
    condition:
      - condition: state
        entity_id: group.people
        state: "home"
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
    action:
      - service: climate.set_preset_mode
        data:
          entity_id: climate.house
          preset_mode: "none"
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "none"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Setting heating and hot water thermostat to normal mode

  - alias: "Climate - home"
    trigger:
      - platform: state
        entity_id: group.people
        to: "home"
    condition:
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
    action:
      - service: climate.set_preset_mode
        data:
          entity_id: climate.house
          preset_mode: "none"
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "none"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Setting heating and hot water thermostat to normal mode


  - alias: "Climate - Sleep (tomorrow workday)"
    trigger:
      - platform: time
        at: "21:00:00"
    condition:
      - condition: state
        entity_id: binary_sensor.workday_tomorrow
        state: "on"
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: "on"
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.house
          temperature: 17
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "Away"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Setting heating low for sleeping

  - alias: "Climate - Sleep (tomorrow not workday)"
    trigger:
      - platform: time
        at: "23:00:00"
    condition:
      - condition: state
        entity_id: binary_sensor.workday_tomorrow
        state: "off"
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: "on"
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.house
          temperature: 17
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "Away"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Setting heating low for sleeping

  - alias: "Climate - Weekday Morning"
    trigger:
      - platform: time
        at: "06:30:00"
    condition:
      - condition: state
        entity_id: binary_sensor.workday
        state: "on"
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: "on"
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.house
          temperature: 20
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "none"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Warming the house up for a weekday morning.

  - alias: "Climate - Lazy Morning"
    trigger:
      - platform: time
        at: "07:30:00"
    condition:
      - condition: state
        entity_id: binary_sensor.workday
        state: "off"
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: "on"
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.house
          temperature: 20
      - service: climate.set_preset_mode
        data:
          entity_id: climate.hot_water
          preset_mode: "none"
      - service: logbook.log
        data_template:
          name: EVENT
          message: >
            Warming the house up for a lazy morning.
