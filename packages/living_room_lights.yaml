automation:
  - alias: Living room light toggle
    trigger:
      - platform: state
        entity_id: binary_sensor.living_room_switch_touch_pad
        to: 'on'
    action:
      - service: switch.turn_on
        entity_id:
          - switch.living_room_switch_relay
      - service: light.toggle
        data_template:
          entity_id:
            - light.living_room
          brightness_pct: >
            {% if states('sensor.time_of_day') == "Morning" %}
            100
            {% elif states('sensor.time_of_day') == "Day" %}
            100
            {% elif states('sensor.time_of_day') == "Night" %}
            30
            {% endif %}
          # If you use a transition here, it causes delays when turning off at the lightswitch, contrary to 'expected behaviour'
          # Specifically, toggle 'on' to, say, 30%, and then toggle 'off' and the dimming duration always seems too long.
          #transition: >
          #  {% if states('sensor.time_of_day') == "Morning" %}
          #  10
          #  {% elif states('sensor.time_of_day') == "Day" %}
          #  2
          #  {% elif states('sensor.time_of_day') == "Night" %}
          #  5
          #  {% endif %}
          color_temp: >
            {% if states('sensor.time_of_day') == "Morning" %}
            200
            {% elif states('sensor.time_of_day') == "Day" %}
            300
            {% elif states('sensor.time_of_day') == "Night" %}
            375
            {% endif %}
      - service: logbook.log
        data_template:
          name: EVENT
          message: "Toggling living room lights"

  - alias: Living Room motion - motion timeout
    trigger:
      - platform: state
        entity_id: binary_sensor.living_room_motion
        to: 'off'
        for:
          minutes: 60
    action:
      service: homeassistant.turn_off
      entity_id: light.sofa_overhead, light.dining_table_overhead, light.uplighter, light.sideboard, light.train_cabinets, light.dining_nook

  - alias: Living Room motion - sunlight timeout
    trigger:
      - platform: numeric_state
        entity_id: sensor.outside_utility_room_lightlevel
        above: 750
    action:
      service: homeassistant.turn_off
      entity_id: light.sofa_overhead, light.dining_table_overhead, light.uplighter, light.sideboard, light.train_cabinets, light.dining_nook

  - alias: Living Room motion
    trigger:
      - platform: state
        entity_id: binary_sensor.living_room_motion
        to: 'on'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.night_view
        state: "off"
      - condition: numeric_state
        entity_id: sensor.outside_utility_room_lightlevel
        below: 750
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.living_room_kodi
            state: "idle"
          - condition: state
            entity_id: media_player.living_room_kodi
            state: "stopped"
          - condition: state
            entity_id: media_player.living_room_kodi
            state: "paused"
          - condition: state
            entity_id: media_player.living_room_kodi
            state: "off"
    action:
      - service: light.turn_on
        data_template:
          entity_id: >
            {% if states('sensor.time_of_day') == "Morning" %}
            light.sofa_overhead, light.dining_table_overhead, light.uplighter, light.sideboard, light.train_cabinets, light.dining_nook
            {% else %}
            light.sofa_overhead, light.dining_table_overhead, light.uplighter, light.sideboard, light.train_cabinets, light.dining_nook
            {% endif %}
          brightness_pct: >
            {% if states('sensor.time_of_day') == "Morning" %}
            100
            {% elif states('sensor.time_of_day') == "Day" %}
            100
            {% elif states('sensor.time_of_day') == "Night" %}
              {% if states('binary_sensor.guest_mode') == "on" %}
              100
              {% elif states('binary_sensor.guest_mode') == "off" %}
              30
              {% endif %}
            {% endif %}
          transition: >
            {% if states('sensor.time_of_day') == "Morning" %}
            10
            {% elif states('sensor.time_of_day') == "Day" %}
            2
            {% elif states('sensor.time_of_day') == "Night" %}
            5
            {% endif %}
          color_temp: >
            {% if states('sensor.time_of_day') == "Morning" %}
            500
            {% elif states('sensor.time_of_day') == "Day" %}
            300
            {% elif states('sensor.time_of_day') == "Night" %}
            375
            {% endif %}
