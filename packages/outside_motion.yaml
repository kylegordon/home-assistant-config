---
automation:
  - alias: Outdoor lights on
    id: outdoor_lights_on
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.back_door_pir
          - binary_sensor.driveway_pir
          - binary_sensor.driveway_person_occupancy
          - binary_sensor.back_door_person_occupancy
          - binary_sensor.gates_person_occupancy
          - binary_sensor.front_door_person_occupancy
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.night_view
        state: "off"
      - condition: state
        entity_id: sun.sun
        state: "below_horizon"
    action:
      - service: script.tweet_engine
        data_template:
          tweet: >
            {{ [
            "Dark outside and motion detected! Scared! Turning on my outside lights!",
            "Woooo, it's dark and scary. Something moved! Turning on the outside lights!",
            "Did you hear that? I can't see a thing. Turning on the outside lights"
            ] | random + " https://amzn.to/2CR5mbQ" }}
      - service: light.turn_on
        entity_id:
          - light.driveway_floodlights
          - light.mini_deck_floodlight
          - light.driveway_floodlights
          - light.back_floodlights
          - light.mini_deck_floodlight
      - service: light.turn_on
        # Set the white channel values to maximum
        data:
          entity_id: light.decking_lights
          rgbww_color:
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[0] | default(0) | int }}"
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[1] | default(0) | int }}"
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[2] | default(0) | int }}"
            - 255
            - 255
      # If this evaluates to false, the action will stop here.
      - condition: template
        value_template: "{{ not is_state('binary_sensor.home_occupied') }}"
      - service: light.turn_on
        entity_id: light.front_door_floodlights

  - alias: Outdoor lights off
    id: outdoor_lights_off
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.back_door_pir
          - binary_sensor.driveway_pir
          - binary_sensor.front_door_motion
          - binary_sensor.back_door_person_occupancy
          - binary_sensor.driveway_person_occupancy
          - binary_sensor.driveway_person_occupancy
          - binary_sensor.gates_person_occupancy
        to: 'off'
        for:
          seconds: 300
    action:
      - service: light.turn_off
        entity_id:
          - light.driveway_floodlights
          - light.mini_deck_floodlight
          - light.front_door_floodlights
          - light.driveway_floodlights
          - light.back_floodlights
          - light.mini_deck_floodlight
      - service: light.turn_on
        # Set the white channel values to zero
        data:
          entity_id: light.decking_lights
          rgbww_color:
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[0] | default(0) | int }}"
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[1] | default(0) | int }}"
            - "{{ state_attr('light.decking_lights', 'rgbww_color')[2] | default(0) | int }}"
            - 0
            - 0
