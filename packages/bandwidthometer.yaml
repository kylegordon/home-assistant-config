template:
  - sensor:
      - name: 'Bandwidth in as percentage'
        unique_id: bandwidth_in_as_percentage
        # We have a, nominally, 100Meg connection.
        # state: '{{ (((states.sensor.internet_speed_in.state | float ) / 100 ) * 100 ) | round(0) }}'
        state: "{{ (states('sensor.internet_speed_in') | float(0) ) }}"
        unit_of_measurement: '%'

automation:
  - id: scale_percentage
    alias: Bandwidthometer Value
    trigger:
      platform: state
      entity_id: sensor.bandwidth_in_as_percentage
    action:
      service: light.turn_on
      target:
        entity_id: light.bandwidthometer_display
      data:
        # brightness_pct: {{ (states('input_number.bandwidth_in_as_a_percentage') | float) | round(0) | int }}
        # brightness_pct: sensor.bandwidth_in_as_percentage
        brightness_pct: >
          {{ states.sensor.bandwidth_in_as_percentage.state|int}}

  - id: scale_backlight_up
    alias: Bandwidthometer Backlight On
    trigger:
      platform: numeric_state
      entity_id: sensor.bandwidth_in_as_percentage
      above: 80
    action:
      service: light.turn_on
      target:
        entity_id:
          - light.bandwidthometer_light
      data:
        brightness_pct: 100
        transition: 10
        rgb_color: [255, 0, 0]

  - id: scale_backlight_down
    alias: Bandwidthometer Backlight Off
    trigger:
      platform: numeric_state
      entity_id: sensor.bandwidth_in_as_percentage
      below: 80
    action:
      service: light.turn_off
      target:
        entity_id:
          - light.bandwidthometer_light
