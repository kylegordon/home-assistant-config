substitutions:
  device_name: oled_bandwidth
  device_description: OLED Bandwidth Display
  friendly_name: OLED Bandwidth

esphome:
  name: oled_bandwidth
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  # FIXME Needs AP details

captive_portal:

logger:

api:

ota:

# Enable web server
web_server:
  port: 80

binary_sensor:
# Reports if this device is Connected or not
- platform: status
  name: ${friendly_name} Status

sensor:
# Reports the WiFi signal strength
- platform: wifi_signal
  name: ${friendly_name} Signal
  update_interval: 60s
- platform: homeassistant
  id: internet_speed_in
  entity_id: sensor.internet_speed_in
  internal: true

- platform: homeassistant
  id: internet_speed_out
  entity_id: sensor.internet_speed_out
  internal: true

# Reports how long the device has been powered (in minutes)
- platform: uptime
  name: ${friendly_name} Uptime
  filters:
    - lambda: return x / 60.0;
  unit_of_measurement: minutes

text_sensor:
# Reports the ESPHome Version with compile date
- platform: version
  name: ${friendly_name} ESPHome Version

syslog:
  ip_address: 172.24.32.13
  port: 514

time:
  - platform: homeassistant
    id: esptime
    timezone: Europe/London

font:
  - file: 'slkscr.ttf'
    id: font1
    size: 8

  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 20

  - file: 'arial.ttf'
    id: font3
    size: 14

i2c:
  sda: GPIO4
  scl: GPIO5
  scan: False

display:
  - platform: ssd1306_i2c
    model: "SSD1306 64x48"
    rotation: 180
    reset_pin: D0
    address: 0x3C
    lambda: |-
      // Print time in HH:MM:%S format. Dividing lines make the screen look too busy though
      //it.line(0, 19, it.get_width(), 19);
      it.strftime(it.get_width(), 26, id(font3), TextAlign::CENTER_RIGHT, "%H:%M:%S", id(esptime).now());
      //it.line(0, 32, it.get_width(), 32);

      // Print current download rate (from homeassistant sensor)
      if (id(internet_speed_in).has_state()) {
        it.printf(0, 0, id(font2), TextAlign::TOP_LEFT , "In:");
        it.printf(it.get_width(), 0, id(font2), TextAlign::TOP_RIGHT , "%.2f", id(internet_speed_in).state);
      }

      // Print current upload rate (from homeassistant sensor)
      if (id(internet_speed_out).has_state()) {
        it.printf(0, 48, id(font2), TextAlign::BASELINE_LEFT , "Out:");
        it.printf(it.get_width(), 48, id(font2), TextAlign::BASELINE_RIGHT , "%.2f", id(internet_speed_out).state);
      }
