packages:
  common: !include common.yaml

esphome:
  name: ${device_name}
  comment: ${device_description}
  friendly_name: ${friendly_name}

esp8266:
  board: d1_mini

# Enable logging
logger:

captive_portal:

web_server:
  port: 80

syslog:
  ip_address: 172.24.32.13
  port: 515

output:
  # Register the blue LED as a dimmable output ....
  - platform: esp8266_pwm
    id: blue_led
    pin: D4
    inverted: true
  - platform: esp8266_pwm
    id: warm
    min_power: 0.05
    zero_means_zero: true
    pin: D2
    inverted: false
  - platform: esp8266_pwm
    id: cold
    min_power: 0.05
    zero_means_zero: true
    pin: D3
    inverted: false

light:
  - platform: monochromatic
    name: "Wemos Blue LED"
    output: blue_led
  - platform: monochromatic
    name: "Warm White"
    output: warm
  - platform: monochromatic
    name: "Cold White"
    output: cold
  - platform: cwww
    name: "Combined output"
    id: combinedlight
    cold_white: cold
    warm_white: warm
    cold_white_color_temperature: 6536 K
    warm_white_color_temperature: 2000 K
    constant_brightness: true
    effects:
      - random:
      - strobe:
      - pulse:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Pulse"
          # transition_length: 1s      # defaults to 1s
          update_interval: 2s
      - flicker:
          alpha: 50%  # The percentage that the last color value should affect the light. More or less the “forget-factor” of an exponential moving average. Defaults to 95%.
          intensity: 50%  # The intensity of the flickering, basically the maximum amplitude of the random offsets. Defaults to 1.5%.
      - lambda:
          name: Throb
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(combinedlight).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(1000);
            if (state == 0) {
              call.set_brightness(1.0);
            } else {
              call.set_brightness(0.01);
            }
            call.perform();
            state += 1;
            if (state == 2)
              state = 0;
