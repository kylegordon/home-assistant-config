# Common code for Novostella 20W Flood Lights

# Credit to https://esphome-configs.io/devices/novostella-20w/

#Novostella 20W Flood Light, https://smile.amazon.com/gp/product/B07VH1VHYL
#https://fccid.io/2AI5T-SFGD-002
#https://blakadder.github.io/templates/novostella_20W_flood.html

esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  ap: #since we listed an SSID above, this AP mode will only enable if no WiFi connection could be made
    ssid: ${friendly_name}_AP
    password: !secret wifi_pass

captive_portal:

# Enable logging
logger:
  baud_rate: 0 #disable UART logging since we aren't connected to GPIO1 TX

# Enable Home Assistant API
api:

# Enable OTA updates
ota:

# Enable web server
web_server:
  port: 80

syslog:
  ip_address: 172.24.32.13
  port: 515

binary_sensor:
# Reports if this device is Connected or not
- platform: status
  name: ${friendly_name} Status

sensor:
# Reports the WiFi signal strength
- platform: wifi_signal
  name: ${friendly_name} Signal
  update_interval: 60s

# Reports how long the device has been powered (in minutes)
- platform: uptime
  name: ${friendly_name} Uptime
  filters:
    - lambda: return x / 60.0;
  unit_of_measurement: minutes

text_sensor:
# Reports the ESPHome Version with compile date
- platform: version
  name: ${friendly_name} ESPHome Version

switch:
  - platform: restart
    name: "${friendly_name} Restart"

output:
- platform: esp8266_pwm
  id: red
  pin: GPIO4
  inverted: False
- platform: esp8266_pwm
  id: green
  pin: GPIO12
  inverted: False
- platform: esp8266_pwm
  id: blue
  pin: GPIO14
  inverted: False
- platform: esp8266_pwm
  id: cold_white
  pin: GPIO5
  inverted: False
- platform: esp8266_pwm
  id: warm_white
  pin: GPIO13
  inverted: False

light:
- platform: rgbww
  name: ${friendly_name}
  red: red
  green: green
  blue: blue
  cold_white: cold_white
  warm_white: warm_white
  cold_white_color_temperature: 6500 K
  warm_white_color_temperature: 2700 K
  id: thelight
  effects:
    - random:
    - strobe:
    - flicker:
        alpha: 50% #The percentage that the last color value should affect the light. More or less the “forget-factor” of an exponential moving average. Defaults to 95%.
        intensity: 50% #The intensity of the flickering, basically the maximum amplitude of the random offsets. Defaults to 1.5%.
    - lambda:
        name: Throb
        update_interval: 1s
        lambda: |-
          static int state = 0;
          auto call = id(thelight).turn_on();
          // Transtion of 1000ms = 1s
          call.set_transition_length(1000);
          if (state == 0) {
            call.set_brightness(1.0);
          } else {
            call.set_brightness(0.01);
          }
          call.perform();
          state += 1;
          if (state == 2)
            state = 0;
