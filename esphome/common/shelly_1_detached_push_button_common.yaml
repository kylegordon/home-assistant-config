---
# Basic config
packages:
  common: !include common.yaml

esp8266:
  board: esp01_1m

esphome:
  name: ${device_name}
  comment: ${device_description}
  friendly_name: ${friendly_name}

captive_portal:

# Enable logging
logger:

web_server:

syslog:
  udp_id: esphome_udp_syslog
  time_id: esptime

udp:
  id: esphome_udp_syslog
  addresses: 172.24.32.13
  port: 515
time:
  - platform: homeassistant
    id: esptime
    timezone: Europe/London

# Shelly 1 detached switch config with multi click options and fallback in case of wifi or api fail

switch:
  - platform: gpio
    name: ${friendly_name} Relay
    pin: GPIO4
    id: shelly_relay
    restore_mode: "${default_state}"

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
    name: ${friendly_name} button
    # config for multi click actions
    # Ideas from https://github.com/TheFes/HA-configuration/blob/main/esphome/packages/shelly1_detached_multi.yaml
    on_multi_click:
      # triple click
      - timing:
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send double click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${friendly_name} double click
                      device_name: ${device_name}
                      click_type: triple
              # toggle relay in case either wifi or api are not connected
              else:
                - switch.toggle: shelly_relay
      # double click
      - timing:
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send double click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${friendly_name} double click
                      device_name: ${device_name}
                      click_type: double
              # toggle relay in case either wifi or api are not connected
              else:
                - switch.toggle: shelly_relay
      # long click
      - timing:
          - ON for at least 1.5s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send long click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${friendly_name} long click
                      device_name: ${device_name}
                      click_type: long
              # toggle relay in case either wifi or api are not connected
              else:
                - switch.toggle: shelly_relay
      # single click
      - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
              # send single click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${friendly_name} short click
                      device_name: ${device_name}
                      click_type: single
              # toggle relay in case either wifi or api are not connected
              else:
                - switch.toggle: shelly_relay
    internal: true
    id: button_input
