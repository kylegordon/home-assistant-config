packages:
  common: !include common/common.yaml
  colors: !include common/colours.yaml

substitutions: #substitute your own values in this section
  device_name: ili9341
  device_description: "Render text on an ILI9341 TFT display"
  static_ip: 192.168.1.254
  gateway: 192.168.1.1
  subnet: 255.255.255.0
  internal_temp_sensor: sensor.air_quality_meter_temperature #entity from Home Assistant
  outside_temp_sensor: sensor.outside_temperature #entity from Home Assistant
  weather_entity: weather.smhi_home #entity from Home Assistant
  todays_forecast_high_entity: sensor.todays_forecast_high #entity from Home Assistant
  todays_forecast_low_entity: sensor.todays_forecast_low #entity from Home Assistant
  todays_forecast_condition_entity: sensor.todays_forecast_condition
  tomorrows_forecast_high_entity: sensor.tomorrows_forecast_high
  tomorrows_forecast_low_entity: sensor.tomorrows_forecast_low
  tomorrows_forecast_condition_entity: sensor.tomorrows_forecast_condition

esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ESP32
  board: nodemcu-32s

captive_portal:

logger:

web_server:

time:
  - platform: homeassistant
    id: esptime
    timezone: Europe/London

font:
  - file: 'common/fonts/slkscr.ttf'
    id: font1
    size: 8

  - file: 'common/fonts/BebasNeue-Regular.ttf'
    id: font2
    size: 20

  - file: 'common/fonts/arial.ttf'
    id: font3
    size: 14

  - file: 'common/fonts/BebasNeue-Regular.ttf'
    id: fontlarge
    size: 64

  - file: 'SourceSansPro-Light.ttf'
    id: font1
    size: 14
  - file: 'SourceSansPro-SemiBold.ttf'
    id: font2
    size: 26
  - file: 'materialdesignicons-webfont.ttf'
    id: font3
    size: 35
    glyphs:
      - "\U000F0F55" #mdi:home-thermometer-outline
  - file: 'materialdesignicons-webfont.ttf'
    id: font4
    size: 70
    glyphs:
      - "\U000F0594"  # "clear-night"
      - "\U000F0590"  # "cloudy"
      - "\U000F0591"  # "fog"
      - "\U000F0592"  # "hail"
      - "\U000F0593"  # "lightning"
      - "\U000F067E"  # "lightning-rainy"
      - "\U000F0595"  # "partlycloudy"
      - "\U000F0596"  # "pouring"
      - "\U000F0597"  # "rainy"
      - "\U000F0598"  # "snowy"
      - "\U000F067F"  # "snowy-rainy"
      - "\U000F0599"  # "sunny"
      - "\U000F059D"  # "windy"
      - "\U000F059E"  # "windy-variant"
  - file: 'SourceSansPro-Bold.ttf'
    id: font5
    size: 60

sensor:
  - platform: homeassistant
    id: internet_speed_in
    entity_id: sensor.internet_speed_in
    internal: true

  - platform: homeassistant
    id: internet_speed_out
    entity_id: sensor.internet_speed_out
    internal: true

  - platform: homeassistant
    id: house_average_temperature
    entity_id: sensor.house_average_temperature
    internal: true

  - platform: homeassistant
    id: house_target_temperature
    entity_id: sensor.house_target_temperature
    internal: true

  - platform: homeassistant
    id: inside_temperature
    entity_id: $internal_temp_sensor
    internal: true

  - platform: homeassistant
    id: outside_temperature
    entity_id: $outside_temp_sensor
    internal: true

  - platform: homeassistant
    id: todays_forecast_high
    entity_id: $todays_forecast_high_entity
    internal: true

  - platform: homeassistant
    id: todays_forecast_low
    entity_id: $todays_forecast_low_entity
    internal: true

  - platform: homeassistant
    id: tomorrows_forecast_high
    entity_id: $tomorrows_forecast_high_entity
    internal: true

  - platform: homeassistant
    id: tomorrows_forecast_low
    entity_id: $tomorrows_forecast_low_entity
    internal: true

text_sensor:
  - platform: homeassistant
    id: next_bin
    entity_id: sensor.next_bin
    internal: true

  - platform: homeassistant
    id: weather_state
    name: "Current Weather Icon"
    entity_id: $weather_entity
    internal: true

  - platform: homeassistant
    id: tomorrows_forecast_condition
    entity_id: $tomorrows_forecast_condition_entity
    internal: true

  - platform: homeassistant
    id: todays_forecast_condition
    entity_id: $todays_forecast_condition_entity
    internal: true

spi:
  clk_pin: 18
  mosi_pin: 23
  miso_pin: 19

color:
  - id: my_red
    red: 100%
    green: 3%
    blue: 5%

image:
  - id: bin
    file: "delete-empty.png"
    type: RGB24

display:
  - id: my_display
    platform: ili9341
    model: "TFT 2.4"
    cs_pin: 5
    dc_pin: 27
    reset_pin: 33
    rotation: 270
    pages:
      - id: viewpoint
        lambda: |-
          // Print "Viewpoint" in top center.
          it.printf(32, 0, id(font1), TextAlign::TOP_CENTER, "Viewpoint");

          // Print time in HH:MM format
          it.strftime(it.get_width(), 26, id(fontlarge), TextAlign::CENTER_RIGHT, "%H:%M:%S", id(esptime).now());

          // it.rectangle(0,0,318,238,COLOR_CSS_WHITE);
          // it.rectangle(1,1,316,236,COLOR_CSS_WHITE);
          // it.horizontal_line(2,50,316,COLOR_CSS_BLUE);
          // it.horizontal_line(2,51,316,COLOR_CSS_BLUE);

      - id: temperatures
        lambda: |-
          it.printf(0, 0, id(fontlarge), TextAlign::BASELINE_LEFT , "Climate");
          // %.1f substitutes to 1 decimal place
          if (id(house_target_temperature).has_state()) {
            it.printf(0, 128, id(fontlarge), TextAlign::BASELINE_LEFT , "Target: %.1f°C", id(house_target_temperature).state);
          }

          if (id(house_average_temperature).has_state()) {
            it.printf(0, 192, id(fontlarge), TextAlign::BASELINE_LEFT , "Actual: %.1f°C", id(house_average_temperature).state);
          }

      - id: nextbin
        lambda: |-
          if (id(next_bin).has_state()) {
            // it.printf(0, 200, id(fontlarge), TextAlign::BASELINE_LEFT , id(next_bin).state);
            // it.printf(0, 220, id(fontlarge), "Hello World!");
            it.printf(0, 220, id(fontlarge), TextAlign::BASELINE_LEFT, "Bin: %s", id(next_bin).state.c_str());
          }

      - id: circle
        lambda: |-
          it.filled_circle(it.get_width() / 2, it.get_height() / 3, 30, COLOR_CSS_RED);

interval:
  - interval: 3s
    then:
      - display.page.show_next: my_display
      - component.update: my_display

# Define a PWM output on the ESP32
output:
  - platform: ledc
    pin: 32
    id: gpio_32_backlight_pwm

# Define a monochromatic, dimmable light for the backlight
light:
  - platform: monochromatic
    output: gpio_32_backlight_pwm
    name: "ILI9341 Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON