---
name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  schedule:
    - cron: 0 12 * * *

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running YAMLlint
        uses: ibiqlik/action-yamllint@v1
        continue-on-error: true
        with:
          config_file: .github/yamllint-config.yml
  remarklint:
    runs-on: ubuntu-18.04
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: "remark --no-stdout --color --frail --use preset-lint-recommended ."
  home_assistant_stable:
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: |
          cp -R travis_secrets.yaml secrets.yaml
          sudo mkdir -p /github/workspace/tmp
          sudo touch fullchain.pem
          sudo touch privkey.pem
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: |
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: python -m homeassistant --config  ./ --script check_config --info all
  home_assistant_beta:
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: |
          cp -R travis_secrets.yaml secrets.yaml
          sudo mkdir -p /github/workspace/tmp
          sudo touch fullchain.pem
          sudo touch privkey.pem
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:beta"
        with:
          args: |
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:beta"
        with:
          args: python -m homeassistant --config ./ --script check_config --info all
  home_assistant_dev:
    runs-on: ubuntu-latest
    needs: [yamllint, remarklint]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: |
          cp -R travis_secrets.yaml secrets.yaml
          sudo mkdir -p /github/workspace/tmp
          sudo touch fullchain.pem
          sudo touch privkey.pem
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:dev"
        with:
          args: |
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:dev"
        with:
          args: python -m homeassistant --config ./ --script check_config --info all
  esphome:
    runs-on: ubuntu-latest
    needs: [yamllint]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: ESPHome Version
        uses: "docker://esphome/esphome"
        with:
          args: "version"
      - name: Copy stub files into configuration folder
        run: |
          cp -R travis_secrets.yaml esphome/common/secrets.yaml
          cp -R travis_secrets.yaml esphome/secrets.yaml
      - name: Run esphome on all files
        # yamllint disable rule:line-length
        run: |
          CHANGED_FILES=$(git diff --name-status HEAD~1...HEAD . | grep -i esphome)
          if [ -n "$CHANGED_FILES" ]
          then
            echo ${PWD}/esphome/
            for file in $(find \
                ${PWD}/esphome/ \
                -type f \
                -maxdepth 1\
                -name "*.yaml"\
                -not -name "secrets.yaml"\
                -printf "%f\n"
                ); do
                set -o errexit
                echo "Testing $file"
                docker run --rm -v "${PWD}":/config -it esphome/esphome esphome/$file compile
            done
          fi